1
00:00:00,000 --> 00:00:00,500
 

2
00:00:00,500 --> 00:00:05,900
Alright hello everybody and welcome to the third machine learning and second regression tutorial video.

3
00:00:06,300 --> 00:00:15,020
Where we left off, I was asking whether or not the adjusted close column would be a feature or a label.

4
00:00:15,020 --> 00:00:20,160
And the answer is really a feature and possibly none of the above.

5
00:00:20,260 --> 00:00:28,000
Um... It could be a label if we hadn't already kind of decided that we are using the high minus low percent

6
00:00:28,600 --> 00:00:31,000
um... or the percent change.

7
00:00:31,000 --> 00:00:35,520
For example so, you could use adjusted close as a label if,

8
00:00:35,740 --> 00:00:41,160
say, at the beginning of the day you were trying to predict what the close might be that day.

9
00:00:41,440 --> 00:00:47,320
But in this case with the given features that we have chosen, you really wouldn't even know this value.

10
00:00:47,320 --> 00:00:49,540
Um, you wouldn't know the high minus low

11
00:00:49,540 --> 00:00:51,220
and you wouldn't know the percent change

12
00:00:51,340 --> 00:00:53,180
until the close had already occurred.

13
00:00:53,380 --> 00:00:57,540
So, if you trained a classifier to predict this value,

14
00:00:57,900 --> 00:01:01,340
um, that would be an incredibly biased classifier.

15
00:01:01,340 --> 00:01:05,000
So, just kind of you have to start thinking of these things.

16
00:01:05,000 --> 00:01:07,000
Is this even possible in the real world?

17
00:01:07,180 --> 00:01:09,100
Cause you can kind of find yourself doing things

18
00:01:09,100 --> 00:01:14,060
uh that seem like a great idea at the time, but then it's actually not even possible to do.

19
00:01:14,360 --> 00:01:18,280
So, in our case, adjusted close will either be a feature,

20
00:01:18,280 --> 00:01:21,860
or not, none of the above in the sense that actually what we will do

21
00:01:21,860 --> 00:01:26,960
is take like the last 10 values of the adjusted close and that's a feature.

22
00:01:26,960 --> 00:01:33,400
And, that's most representative of when we actually go and dig in and write the algorithm ourselves

23
00:01:33,680 --> 00:01:37,200
, um, you would take maybe the last 10 values, and try to predict the future value.

24
00:01:37,380 --> 00:01:39,260
Anyway, more on that later.

25
00:01:39,260 --> 00:01:46,000
So the last, uh  the last tutorial we did features, and now in this tutorial we are gonna define a label.

26
00:01:46,000 --> 00:01:51,620
So, since I just got done telling you that this is not gonna be a label, what actually would be the label?

27
00:01:51,620 --> 00:01:55,840
Well, it would be at some point in the future, the price. Okay.

28
00:01:55,840 --> 00:01:59,900
And the only price column we have anymore is adjusted close.

29
00:01:59,900 --> 00:02:03,880
Um, but what we wanna do is actually get the adjusted close in the future

30
00:02:03,880 --> 00:02:07,500
, maybe the next day, maybe the next 5 days, something like that.

31
00:02:07,680 --> 00:02:16,220
So, we need to bring in some new information, basically to get that information up into the future.

32
00:02:16,220 --> 00:02:19,700
So, let's go ahead and close this out and begin working on that.

33
00:02:20,360 --> 00:02:26,400
So, first of all, um we want to..., we are gonna take,

34
00:02:26,420 --> 00:02:28,660
we are not gonna print the head anymore.

35
00:02:28,860 --> 00:02:31,020
And, first of all, the,

36
00:02:31,040 --> 00:02:35,680
we are gonna say forecast_column or col,

37
00:02:35,680 --> 00:02:38,740
is just gonna be equal to adjusted close.

38
00:02:38,760 --> 00:02:42,360
I'll explain why we are gonna do that in a second but basically it's just a variable

39
00:02:42,380 --> 00:02:48,440
and later on, you could change this variable to be a different forecast column.

40
00:02:48,900 --> 00:02:51,760
So, you might not be working with stock prices,

41
00:02:51,760 --> 00:02:55,480
there's other things that you can use when you are regression on, of course machine learning

42
00:02:55,480 --> 00:02:56,980
other than stock prices.

43
00:02:57,240 --> 00:03:01,460
So, in the future, if you aren't, you're gonna just, you'll be able to use very similar code.

44
00:03:01,720 --> 00:03:04,340
You'll obviously change the code leading up to this point,

45
00:03:04,620 --> 00:03:08,140
but you just change forecast column to be whatever you want it in the future.

46
00:03:08,400 --> 00:03:12,340
And I'll show you why when we get to the code, why that's gonna be useful.

47
00:03:12,400 --> 00:03:21,520
Um now, what we're gonna say is just in case there is not, not, uh missing data, so df dot fill na.

48
00:03:21,520 --> 00:03:26,680
So fill na is just fill any, as for not available or

49
00:03:26,740 --> 00:03:30,740
in pandas term it's gonna be actually a na in most cases and that's not a number.

50
00:03:31,840 --> 00:03:35,560
So now we are gonna fill na with a specific value

51
00:03:35,560 --> 00:03:40,700
we're gonna do - 99,999  and we're gonna say inplace equals true.

52
00:03:40,840 --> 00:03:45,380
So with machine learning, you can't work with na data.

53
00:03:45,560 --> 00:03:49,980
So you actually have to replace the na data with something and,

54
00:03:50,240 --> 00:03:52,680
or you can get rid of that entire column,

55
00:03:52,680 --> 00:03:55,200
but you don't want to get rid of data in machine learning

56
00:03:55,200 --> 00:03:58,940
in the real world you actually will find that you miss a lot of data.

57
00:03:59,020 --> 00:04:02,800
You are lacking maybe one column, but you have got the other columns,

58
00:04:03,000 --> 00:04:05,620
and you don't wanna sacrifice data if you don't have to.

59
00:04:05,640 --> 00:04:10,860
So you can do this and it will be treated as an outlier in your dataset.

60
00:04:10,980 --> 00:04:17,260
And again this is just one more reason why going through and doing the algorithm by hand.

61
00:04:17,540 --> 00:04:22,620
will help you understand so much better what kind of effect that is gonna have on the algorithm.

62
00:04:22,700 --> 00:04:25,220
So, you'll be thankful that we go through it.

63
00:04:25,320 --> 00:04:29,000
And then basically you'll learn through each algorithm why,

64
00:04:29,000 --> 00:04:31,780
uh..., what doing something like that will do?

65
00:04:31,920 --> 00:04:37,600
So anyways, that's the choice, that's the best choice in my opinion rather than getting rid of data.

66
00:04:37,900 --> 00:04:44,580
Now, we are gonna forecast out. This is a regression algorithm, generally you use regression to forecast out.

67
00:04:45,000 --> 00:04:48,160
You don't have to but generally that's what you are doing.

68
00:04:48,360 --> 00:05:03,200
So I am gonna define forecast out as the equal to being the int value of math dot ceiling, um, and the ceiling will be point 1 times the length of the df.

69
00:05:03,200 --> 00:05:08,540
So, first of all, what are we doing there? And also we need to import math. But, first, what are we doing there?

70
00:05:08,540 --> 00:05:12,080
math dot ceil will take anything and get to the ceiling.

71
00:05:12,140 --> 00:05:18,780
So let's say the length of the dataframe was a number that was gonna return a decimal point, that was gonna be like point 2, right?

72
00:05:18,780 --> 00:05:26,060
Let's say that was gonna happen. Math dot ceil will round that up to 1. So, math dot ceil rounds everything up to the nearest whole

73
00:05:26,060 --> 00:05:31,540
So, um, and then we are making it an integer value, um,

74
00:05:31,540 --> 00:05:36,380
just so, cause I think math dot ceil returns a float and we don't really want it to be a float either.

75
00:05:36,380 --> 00:05:41,840
But anyway, uh, this will be the number of days out, so basically what we are gonna do here

76
00:05:41,920 --> 00:05:50,060
is we are gonna try to predict out 10 percent of the dataframe and you'll see that actually when we go out and do this,

77
00:05:50,080 --> 00:05:53,160
it's not like you'll just get 1 point 10 percent out,

78
00:05:53,220 --> 00:05:56,460
you can get tomorrow's price and the next days price and so on.

79
00:05:56,460 --> 00:06:00,800
Um, you're just using data that came 10 days ago to predict today. Ok.

80
00:06:00,800 --> 00:06:07,180
So, um, feel free to change that, right? Maybe you want point 01, right?

81
00:06:07,180 --> 00:06:09,440
Maybe you want to just predict like tomorrow's price or something.

82
00:06:09,520 --> 00:06:16,920
You can play around with that if you want. We are just making stuff up basically as we go. So if you wanna change that, by all means change it.

83
00:06:16,920 --> 00:06:20,280
So let's go ahead and go to the top and import math before we forget.

84
00:06:20,280 --> 00:06:27,160
Okay, so now, we need a, the actual, so we've got labels,

85
00:06:27,520 --> 00:06:31,980
oh I am sorry we have got features, right? these are features, or these are our features

86
00:06:32,220 --> 00:06:36,040
and now we need that label, so now that we have forecast out we can create that label.

87
00:06:36,060 --> 00:06:40,920
So we're gonna say df, and then the label column.

88
00:06:40,920 --> 00:06:46,220
The label will be the equal of df forecast column,

89
00:06:46,320 --> 00:06:50,700
so that's why we used forecast column. that way if later on you decide to change something

90
00:06:50,860 --> 00:06:55,680
you'll be able to just change this variable rather than all the feature variables.

91
00:06:55,860 --> 00:07:03,760
So it'll be equal to the df forecast column and then we are gonna do a dot shift minus forecast out.

92
00:07:03,940 --> 00:07:07,420
That's why we needed it to be an int cause we are basically shifting the columns.

93
00:07:07,420 --> 00:07:10,440
So, what we've done is we are shifting the columns negatively.

94
00:07:10,440 --> 00:07:15,120
So it'll go, basically if you have a column here it'll get shifted up,

95
00:07:15,120 --> 00:07:17,340
the spreadsheet almost.

96
00:07:17,660 --> 00:07:30,900
This way, each row, the label column for each row will be adjusted close price 10 days into the future.

97
00:07:31,180 --> 00:07:33,320
Okay? So that's our label,

98
00:07:33,320 --> 00:07:47,040
so our features are these attributes of what, in our mind, may cause the adjusted close price in 10 days to change or 10 percent.

99
00:07:47,200 --> 00:07:53,380
So actually this will be much greater than 10 days cause we didn't even specify the timeframe

100
00:07:53,380 --> 00:07:58,300
So, we can tinker with this number later, it's really not that important. Um, regression,

101
00:07:58,300 --> 00:08:01,680
you aren't gonna get rich on just this algorithm, I promise you.

102
00:08:01,680 --> 00:08:12,680
But it's actually good, you'll find this actually not a bad model of stock price. And as you add more useful features, it can get, it can get pretty good.

103
00:08:12,840 --> 00:08:20,140
But, anyway, um, so now we have our label column and let's go ahead and print df dot head again.

104
00:08:20,140 --> 00:08:23,660
So this just prints like the first 5 rows of the dataframe.

105
00:08:23,840 --> 00:08:28,680
Again if there's anything we are doing with pandas that you are like "What's going on?". Ask and

106
00:08:28,680 --> 00:08:33,500
I can point you to tutorial because I've got I've done tutorials based on everything that I am gonna be doing.

107
00:08:33,799 --> 00:08:40,939
Um, ok, so these are, our each of these column features and then we finally have a label column that we've kind of,

108
00:08:40,940 --> 00:08:45,500
this is time into the future, um, for our data.

109
00:08:45,680 --> 00:08:49,080
So, now what we're gonna go ahead and do is...

110
00:08:49,140 --> 00:09:00,560
in fact let me do a df dot, let's do a df dot tail and also let's just do a df dot drop na and then in place equals true.

111
00:09:00,740 --> 00:09:07,420
Cause those are some awful high numbers, for 10 percent out. Interesting.

112
00:09:07,420 --> 00:09:10,620
So I guess prices changed that much by that shift.

113
00:09:10,740 --> 00:09:14,900
So let's try a smaller shift. Um, fascinating,

114
00:09:14,900 --> 00:09:16,900
that that would be 10 percent out.

115
00:09:16,900 --> 00:09:20,620
That's a little better.

116
00:09:20,620 --> 00:09:23,440
Maybe, maybe we'll use that point 01.

117
00:09:23,440 --> 00:09:26,200
Let's use that one, cause the other ones were just so huge.

118
00:09:26,400 --> 00:09:29,420
So let's go back to head and see if, if that number.

119
00:09:29,420 --> 00:09:34,440
So if, if you are not following, I am just comparing the forecast price to the adjusted close price.

120
00:09:34,580 --> 00:09:39,220
So of course when the when the stock price opens, this is actually a significant percent change, right,

121
00:09:39,300 --> 00:09:41,180
from 50 to 66,

122
00:09:41,180 --> 00:09:45,820
but the stock just came out and of course google does very well in time.

123
00:09:46,060 --> 00:09:53,240
So, so yeah, but anyway, yeah I think I'll go with point 01 for now. Or oo oo we'll, we'll mess with bot  whenever we go to predict some stuff

124
00:09:53,240 --> 00:09:58,700
Anywway. That's it for this one. So we have done features, we got our label

125
00:09:58,700 --> 00:10:06,260
and now we're actually ready to train, test, predict and actually run this algorithm on some realistic data so

126
00:10:06,260 --> 00:10:09,620
Stay tuned for that. If you have questions, comments, concerns, whatever up to this point

127
00:10:09,620 --> 00:00:00,000
Feel free to leave them below. Otherwise I was allways thankfull whatch these instructions and it's till next time.

