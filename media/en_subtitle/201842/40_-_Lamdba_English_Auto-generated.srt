1
00:00:00,060 --> 00:00:05,430
what is up what is up everyone welcome
to another tutorial and in this video I

2
00:00:05,430 --> 00:00:12,389
want to talk to you about lambda L AM BD
a that's how you spell it but what is it

3
00:00:12,389 --> 00:00:17,130
now I'm guessing that if you programmed
Python for any sufficient amount of time

4
00:00:17,130 --> 00:00:21,119
you probably saw these little lambda
expressions laying around your program

5
00:00:21,119 --> 00:00:25,949
and you may have even been able to
figure out on what they are they kind of

6
00:00:25,949 --> 00:00:30,510
act as a function but first of all how
exactly do you create them and when

7
00:00:30,510 --> 00:00:34,950
would you use them well first let's go
ahead and actually make a really simple

8
00:00:34,950 --> 00:00:43,320
example using lambda so what lambda is
is it's basically a small function that

9
00:00:43,320 --> 00:00:47,879
has no name so you know here let me just
this is just an example on them type in

10
00:00:47,879 --> 00:00:52,289
whenever you make a function you define
it and you call it like tuna or

11
00:00:52,289 --> 00:00:55,800
something
well these small functions these lambda
functions they don't have any name and

12
00:00:57,840 --> 00:01:02,640
that's because they're just one time use
small functions only so how do you

13
00:01:02,640 --> 00:01:09,510
create one type the word lambda and then
after you know how you would pass stuff

14
00:01:09,510 --> 00:01:13,850
in between those parentheses right here
like you pass in a variable called X
after the word lambda that's where you

15
00:01:16,500 --> 00:01:20,220
put your variable name or your input so
I'm just going to pass in some simple

16
00:01:20,220 --> 00:01:25,409
variable called X and we'll just perform
a simple calculation to it so we'll say

17
00:01:25,409 --> 00:01:30,860
that in this small lambda function we're
just going to pass in a number and then

18
00:01:30,860 --> 00:01:36,470
we're going to multiply it by 7 so this
is a syntax for right here your input

19
00:01:36,470 --> 00:01:42,030
colon and then the expression of what do
you want it to do so again this is a

20
00:01:42,030 --> 00:01:47,640
small simple function that only takes
one parameter so let's go ahead and use

21
00:01:47,640 --> 00:01:51,840
it right now now by default we didn't
print anything out we just calculated it

22
00:01:51,840 --> 00:01:57,659
so we need to throw inside a print
function and of course this is called

23
00:01:57,659 --> 00:02:04,020
answer so answer and what number are we
going to pass in we'll just say we'll
pass in five four right now so whenever

24
00:02:06,210 --> 00:02:11,430
you run this check it out
it prints out 35 now obviously what we

25
00:02:11,430 --> 00:02:15,700
did is we created a small lamb
function and take know it's a small
quick and nameless function so even

26
00:02:19,150 --> 00:02:22,960
though we said equal to a variable right
here the function itself doesn't

27
00:02:22,960 --> 00:02:28,060
actually have a name so that's important
to take away so now that we understand

28
00:02:28,060 --> 00:02:32,800
exactly what it is and how we can use
them when would we ever use these things

29
00:02:32,800 --> 00:02:38,200
well we could in this case senario just
go ahead and make a normal function
called like I'll multiply something by

30
00:02:40,150 --> 00:02:46,450
seven but sometimes whenever you're
using like other libraries like kinter
uses this lot or TK and Tara now that's

31
00:02:48,490 --> 00:02:52,450
how you pronounce it but you're going to
come across code like this whenever you
make a button if you didn't watch my

32
00:02:53,760 --> 00:02:58,390
Kinser tutorials this is the basic
syntax of how you create it now of

33
00:02:58,390 --> 00:03:01,630
course you need to import the Kenter
library but this is just an example you

34
00:03:01,630 --> 00:03:05,680
would set the text of the button
something equal to like click me and

35
00:03:05,680 --> 00:03:10,660
then you would obviously want this
button to do something to perform some

36
00:03:10,660 --> 00:03:15,910
action so the built in an attribute for
that is command and you set this equal

37
00:03:15,910 --> 00:03:19,840
to a name of a function however there
are going to be times where you just

38
00:03:19,840 --> 00:03:25,120
want custom button functionality
something to just occur specific for

39
00:03:25,120 --> 00:03:29,260
this button so you don't want to build a
function because functions are really

40
00:03:29,260 --> 00:03:33,250
built whenever you need to use a bit of
code over and over and over again so

41
00:03:33,250 --> 00:03:36,640
instead what you're going to see
something like this you're going to see

42
00:03:36,640 --> 00:03:43,270
lambda and then of course you type you
know your custom button functionality

43
00:03:43,270 --> 00:03:47,920
right here but what this achieves is
you're able to set functionality for
this button without having to build a

44
00:03:50,200 --> 00:03:55,480
separate function that you're only going
to use once so you can again this

45
00:03:55,480 --> 00:04:01,170
attribute right here or requires being
set to a function so that is why

46
00:04:01,170 --> 00:04:06,550
whenever you need to pass in a function
you can just use lambda and you'll be

47
00:04:06,550 --> 00:04:10,210
good to go so again if this is kind of
confusing then watch my kid through

48
00:04:10,210 --> 00:04:15,580
toriel's and I'll explain in like a
practical real-world example how you use

49
00:04:15,580 --> 00:04:20,380
this but that is one case scenario of
what lambda is when you would use it

50
00:04:20,380 --> 00:04:25,440
boom roasted then guys for watching I'll
see you guys in the next video