1
00:00:00,000 --> 00:00:03,990
 已经 欢迎回到家里了 
这个视频我将告诉 你如何 

2
00:00:03,990 --> 00:00:08,220
 使用多个排序自定义对象 
 它实际上正在发生的不同属性

3
00:00:08,220 --> 00:00:12,509
 在我们开始之前真的很有用 
 我 需要问 你们一些事情 

4
00:00:12,509 --> 00:00:17,670
你有没有听说过我这个词
 我正在 发短信 的女孩 

5
00:00:17,670 --> 00:00:24,240
 呃 昨天她去了 我的船 yada 
亚达亚达和我去你的 东西 
 这是什么意思， 就像一个错字 或 

6
00:00:26,189 --> 00:00:30,210
究竟发生了什么， 你说 什么 ，她 
现在这就像现在说的那样 

7
00:00:30,210 --> 00:00:34,530
你说我发货意味着你 
 真的很喜欢 ，我想她 

8
00:00:34,530 --> 00:00:38,160
 只是搞砸了我，但后来我 
在网上看起来很明显 
 这就像现在说的那样，如果有人的话 

9
00:00:40,649 --> 00:00:45,020
之前听说过， 也许 让我 知道 
我只是一个 摆脱循环的方式嗯 

10
00:00:45,020 --> 00:00:50,700
对于那些说不这样 做的人 
 了 ，因为它听起来很愚蠢 ，但 我 

11
00:00:50,700 --> 00:00:55,829
 不知道 每天都在学习新东西 
所以无论如何继续并输入 

12
00:00:55,829 --> 00:01:01,050
运营商导入项目得到你的数字 
在这个视频中的一分钟现在很多工作 

13
00:01:01,050 --> 00:01:05,460
 现在学习一些实际的Python 和什么 
我会做的就是我要 告诉 你 

14
00:01:05,459 --> 00:01:10,020
你们如何排序的自定义，这 是 
实际上往往比往往更多

15
00:01:10,020 --> 00:01:14,460
一堆自定义对象，但为此 
 教程中，我只是有一堆 

16
00:01:14,460 --> 00:01:20,520
这里的词典就是每个对象都是 
当然这些有多个属性

17
00:01:20,520 --> 00:01:23,970
 那些 只是有一个姓氏 和 
名字，我要告诉你们怎么样 

18
00:01:23,970 --> 00:01:28,740
 对 这些 进行排序 ，然后我将 展示 
 你们为什么这样排序他们是一个 

19
00:01:28,740 --> 00:01:33,960
问题以及如何正确地做到这一点 ， 所以我们 
想继续 和我整理这些 

20
00:01:33,960 --> 00:01:40,530
不知道 名字为什么不，所以我 
打算将X写入排序好的 

21
00:01:40,530 --> 00:01:45,619
首先当然是你想要什么 
对用户进行排序， 以便我们能够做到 

22
00:01:45,619 --> 00:01:52,350
用户以及您想要的属性
这样排序， 而 不仅仅是说好的 

23
00:01:52,350 --> 00:01:56,460
 通过任何默认 方法排序这些
你知道我们可以 

24
00:01:56,460 --> 00:02:01,649
 访问属性，以便我们可以排序 
 名字或 姓氏 漂亮 

25
00:02:01,649 --> 00:02:06,299
我们怎么做那个关键还是关键 
 我们想要按等于排序的东西

26
00:02:06,299 --> 00:02:11,500
项目吸气器，这就像 
属性getter基本上是F＆A 

27
00:02:11,500 --> 00:02:15,680
酷酷的每个人都要排序 
 以他们的名字让我们继续吧 

28
00:02:15,680 --> 00:02:21,590
 打印出来，好吧阿曼达 
 Burnie Tom 看起来很好等一下 

29
00:02:21,590 --> 00:02:26,870
看看这里就 在这里看看 
 它排序了所有的 汤姆 它没有 

30
00:02:26,870 --> 00:02:30,920
 真的按字母顺序排序 
订购， 因为它有汤姆罗伯茨 
汤姆威廉姆斯 然后汤姆琼斯 我 

31
00:02:33,980 --> 00:02:38,989
这意味着如果这是一个真正的字母 
 然后 是琼斯 然后是罗伯茨 

32
00:02:38,989 --> 00:02:42,410
威廉姆斯
所以我的意思是回到这里让我离开 

33
00:02:42,410 --> 00:02:49,250
 提前并按L名称排序，那应该是 
 解决那个 问题到底是什么 

34
00:02:49,250 --> 00:02:55,070
看看这是按姓氏排序的 
 但每当你知道这一点 

35
00:02:55,070 --> 00:02:58,970
小组罗伯特说它有Bucky Tom和 
阿曼达

36
00:02:58,970 --> 00:03:04,310
所以我的意思是阿曼达应该是第一个 
然后Bucky 然后汤姆如此哎 

37
00:03:04,310 --> 00:03:10,459
我们按照真正的字母顺序对其进行排序
让我们说我们想先排序 

38
00:03:10,459 --> 00:03:15,500
名字， 但然后是那个子组 
威廉姆斯说我们想要那些 

39
00:03:15,500 --> 00:03:20,320
 更进一步的姓氏所以我们能做什么 
这是

40
00:03:20,320 --> 00:03:26,510
我只是继续打印一下 
分隔线，我只是 这样做 

41
00:03:26,510 --> 00:03:31,040
 因为 我要发布所有的来源 
 我的github页面上的代码，所以如果你们 

42
00:03:31,040 --> 00:03:36,650
我希望按一个属性排序 
那也是我想要做的 

43
00:03:36,650 --> 00:03:43,250
我想做同样的事情 
在我打算 对用户进行排序之前

44
00:03:43,250 --> 00:03:50,150
对于Mikey 来说， 我是 自动完成的 
好的，我不会像 我 一样生气 

45
00:03:50,150 --> 00:03:54,410
只是不要输入象符号和 
我喜欢哦，我的神自动完成你可以

46
00:03:54,410 --> 00:03:58,910
不只是为我输入我的其余代码 
所有这些酷的功能为 他们的 DES 

47
00:03:58,910 --> 00:04:03,769
只是让我变得非常懒惰但是你 
知道我不知道什么 没事如此 

48
00:04:03,769 --> 00:04:07,760
 就像我们 要排序 之前一样 
物品吸气剂，而 不仅仅是 
 这里有 一个 属性，比如f name 

49
00:04:10,130 --> 00:04:15,170
 说没有给我们所希望的 
结果我们实际上可以扔进另一个 

50
00:04:15,170 --> 00:04:21,919
所以我们所说的正确
这里继续获取所有这些 项目 

51
00:04:21,918 --> 00:04:28,400
并首先按他们的 四个排序
 一旦你拥有所有这些 项目， 现在就命名 

52
00:04:28,400 --> 00:04:32,660
 按名字排序 看看 
各个名称组然后排序 

53
00:04:32,660 --> 00:04:37,850
 真的是姓氏 
 太棒了所以现在 让我们继续打印 

54
00:04:37,850 --> 00:04:42,050
这个， 所以这个是默认的一个 
看看第一个汤姆的 

55
00:04:42,050 --> 00:04:47,030
罗伯特·威廉姆斯和琼斯这 不是 
对第二个， 但它排序 
所有对象的名字 

56
00:04:49,370 --> 00:04:56,120
然后一旦它已经排序它去了 
进一步按姓氏对它们进行排序

57
00:04:56,120 --> 00:05:00,980
现在这是一个真正的字母排序 
即使是小组也是如此 

58
00:05:00,980 --> 00:05:05,630
正确排序， 因此 更有用 
 特别是 每当你想 你 

59
00:05:05,630 --> 00:05:10,700
知道像创建数据库并找到东西 
 更快，所以 你去，所以是的 

60
00:05:10,700 --> 00:05:15,350
 再次 我 可能会去看看 
 关于“城市词典”的更多术语 

61
00:05:15,350 --> 00:05:19,520
是的，也许你们想要学习更多
 Python实际上我可能只是 
再拍视频，所以我会看到你们 

62
00:05:20,930 --> 00:05:23,230
然后