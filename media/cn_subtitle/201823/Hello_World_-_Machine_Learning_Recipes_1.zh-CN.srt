1
00:00:00,000 --> 00:00:02,886
［音乐］

2
00:00:06,726 --> 00:00:07,726
只需要敲六行代码

3
00:00:07,726 --> 00:00:09,920
就可以完成你第一个机器学习程序

4
00:00:09,920 --> 00:00:11,374
我是乔什·戈登

5
00:00:11,374 --> 00:00:14,374
今天我来教你写机器学习的第一个程序

6
00:00:14,374 --> 00:00:16,040
在这个系列的前几章

7
00:00:16,040 --> 00:00:17,040
我会从零开始

8
00:00:17,040 --> 00:00:19,080
教你机器学习

9
00:00:19,080 --> 00:00:21,560
为了我们的学习, 我将用到两个开源库

10
00:00:21,560 --> 00:00:23,706
scikit-learn 和 TensorFlow

11
00:00:23,706 --> 00:00:25,330
我们马上将看到scikit能做什么

12
00:00:25,330 --> 00:00:27,830
但是首先, 我们来简单解释一下
什么是机器学习

13
00:00:27,830 --> 00:00:29,240
为什么它很重要

14
00:00:29,240 --> 00:00:30,240
我们可以把机器学习

15
00:00:30,240 --> 00:00:32,409
看做是人工智能的一个子领域

16
00:00:32,409 --> 00:00:35,610
初期的人工智能程序只能做好一件事

17
00:00:35,610 --> 00:00:37,150
举个例子, 深蓝很擅长下棋,

18
00:00:37,150 --> 00:00:40,150
甚至能获得冠军
但它只会下棋

19
00:00:40,150 --> 00:00:42,339
现在, 我们写的程序可以解决很多问题

20
00:00:42,340 --> 00:00:45,340
而不需要重新编码

21
00:00:45,340 --> 00:00:47,460
阿尔法狗就是其中的一个例子

22
00:00:47,460 --> 00:00:50,150
像我们所说的, 他获得了国际围棋赛的冠军

23
00:00:50,150 --> 00:00:53,739
同时，它也可以玩雅特丽游戏

24
00:00:53,740 --> 00:00:55,956
机器学习将这一切变成现实

25
00:00:55,956 --> 00:00:57,831
我们要学的是这样一种

26
00:00:57,831 --> 00:00:58,831
可以从样本数据中学习的算法

27
00:00:58,831 --> 00:01:00,831
而取代了硬编码规则

28
00:01:00,831 --> 00:01:02,200
这真的是太先进了

29
00:01:02,200 --> 00:01:03,750
但是我们会用简单的例子

30
00:01:03,750 --> 00:01:05,632
开始我们的编程

31
00:01:05,632 --> 00:01:07,590
我先给你听起来很简单的问题

32
00:01:07,590 --> 00:01:09,662
但是没有机器学习的算法你却很难解决它

33
00:01:09,662 --> 00:01:10,662
你能写一个

34
00:01:10,662 --> 00:01:12,774
区分苹果和橘子的编码嘛?

35
00:01:12,774 --> 00:01:15,190
我要求你写这样一个程序:
以一张图片为基础

36
00:01:15,190 --> 00:01:16,190
做一些分析,

37
00:01:16,190 --> 00:01:18,580
然后辨别出图上是哪一种水果

38
00:01:18,580 --> 00:01:20,039
你将如何做呢？

39
00:01:20,040 --> 00:01:22,526
你需要写出大量的规则
来完成这种分析

40
00:01:22,526 --> 00:01:24,570
比如你可以写一个程序

41
00:01:24,570 --> 00:01:25,570
将橘子的像素点相加

42
00:01:25,570 --> 00:01:27,570
然后比较其中绿色像素点的数量

43
00:01:27,570 --> 00:01:30,919
这个比例可以给你判断这是哪种水果的依据

44
00:01:30,920 --> 00:01:33,044
但是只有一些简单图片这种算法才会不出错

45
00:01:33,044 --> 00:01:34,710
但是当你更深刻的看这个问题的时候

46
00:01:34,710 --> 00:01:37,100
你将会发现真实的世界充满着不确定因素

47
00:01:37,100 --> 00:01:38,649
你好不容易写的规则可能被一些个例打破

48
00:01:38,650 --> 00:01:41,480
你要写怎样的代码才能识别黑白照片

49
00:01:41,480 --> 00:01:44,480
或图中根本没有苹果和橘子呢？

50
00:01:44,480 --> 00:01:46,360
事实上, 不管你写多少规则

51
00:01:46,360 --> 00:01:48,790
我都能找到一张让他没法识别的图片

52
00:01:48,790 --> 00:01:50,310
你必须写成千上万条规则

53
00:01:50,310 --> 00:01:51,310
只是区分苹果跟

54
00:01:51,310 --> 00:01:53,690
橘子

55
00:01:53,690 --> 00:01:57,390
如果我换个问题
你又得重新写这些代码

56
00:01:57,390 --> 00:01:59,080
很明显, 我们需要一种更有效的方法

57
00:01:59,080 --> 00:02:00,080
为了解决这类问题,

58
00:02:00,080 --> 00:02:02,480
我们需要一种算法
可以自动生成规则

59
00:02:02,480 --> 00:02:04,600
这样我们就不需要一条条重复劳动了

60
00:02:04,600 --> 00:02:07,690
为了做到这些
我们需要训练一个分类器

61
00:02:07,690 --> 00:02:10,359
现在你可以先把分类器
想象成是一个方法

62
00:02:10,360 --> 00:02:11,360
它接受一些数据作为输入

63
00:02:11,360 --> 00:02:14,282
然后给它们分配标签作为输出

64
00:02:14,282 --> 00:02:15,740
就像这样
我有一些图片

65
00:02:15,740 --> 00:02:18,076
我需要知道图片上到底是
苹果还是橘子

66
00:02:18,096 --> 00:02:19,550
或者,我收到一封邮件

67
00:02:19,580 --> 00:02:21,880
我需要区分这到底
是不是一封垃圾邮件

68
00:02:22,040 --> 00:02:23,220
用来实现自动分类器的技术

69
00:02:23,220 --> 00:02:26,220
称为监督学习

70
00:02:26,220 --> 00:02:29,320
我们从一些易于解决的小问题入手

71
00:02:29,320 --> 00:02:31,620
为了写这个代码
我们需要用到scikit-learn

72
00:02:31,620 --> 00:02:34,095
我可以从这里下载
然后安装这个源库

73
00:02:34,095 --> 00:02:35,970
这里有几种不同的方式来安装这个库

74
00:02:35,970 --> 00:02:38,242
对我来说, 最简单的方法就是使用Anaconda了

75
00:02:38,242 --> 00:02:40,450
这是最简单的搭建环境的一种方法

76
00:02:40,450 --> 00:02:42,440
而且在不同平台上都可以顺利运行

77
00:02:42,440 --> 00:02:43,440
关于下载和安装

78
00:02:43,440 --> 00:02:45,776
视频中就直接跳过了

79
00:02:45,776 --> 00:02:47,150
一旦你安装好了

80
00:02:47,168 --> 00:02:48,364
你只需要在python脚本中

81
00:02:48,364 --> 00:02:51,364
引入SK learn这个库就可以了

82
00:02:51,364 --> 00:02:53,146
假设一切正常

83
00:02:53,146 --> 00:02:56,146
你只需要敲这样一行代码就可运行了

84
00:02:56,146 --> 00:02:57,519
对于监督学习而言

85
00:02:57,520 --> 00:03:00,280
有这样几个基本的步骤我们得去实现

86
00:03:00,280 --> 00:03:02,340
第一步是收集训练数据

87
00:03:02,340 --> 00:03:04,790
这里有几个我们想解决的问题

88
00:03:04,790 --> 00:03:05,790
为了解决它们

89
00:03:05,790 --> 00:03:08,001
我要写一个功能来区分水果

90
00:03:08,002 --> 00:03:09,002
首先, 我们将描述的水果
属性作为输入数据

91
00:03:09,002 --> 00:03:11,350
然后根据像重量，质感等特性

92
00:03:11,350 --> 00:03:13,310
对收集到数据进行预测：

93
00:03:13,310 --> 00:03:16,310
这个水果是苹果还是个橘子

94
00:03:16,310 --> 00:03:18,160
为了收集我们需要的数据

95
00:03:18,160 --> 00:03:19,310
想象一下我们来到一片果园

96
00:03:19,310 --> 00:03:21,060
观察苹果跟橘子的不同之处

97
00:03:21,060 --> 00:03:23,627
然后我们把测量好的数据
记录在一张表中

98
00:03:23,627 --> 00:03:24,627
在机器学习中

99
00:03:24,627 --> 00:03:26,650
我们把这种测量得到值叫做特征

100
00:03:26,650 --> 00:03:28,970
为了简化问题
我们这里只用到两个值

101
00:03:28,970 --> 00:03:30,830
水果重多少克

102
00:03:30,830 --> 00:03:33,830
和质感是粗糙还是平滑

103
00:03:33,830 --> 00:03:34,960
好的数据特征

104
00:03:34,960 --> 00:03:37,960
能更好的区分水果的种类

105
00:03:37,960 --> 00:03:40,210
表格的每一行都是我们训练数据的一个样本

106
00:03:40,210 --> 00:03:42,260
它描述了一个水果的属性

107
00:03:42,260 --> 00:03:44,239
最后一列我们把它叫做标签

108
00:03:44,240 --> 00:03:46,257
是用来标注每行的数据是什么水果

109
00:03:46,257 --> 00:03:47,257
当然这里我们只有两种可能

110
00:03:47,257 --> 00:03:49,430
苹果或橘子

111
00:03:49,430 --> 00:03:51,560
整个表格都是我们的训练数据

112
00:03:51,560 --> 00:03:52,560
想象一下
我们得让分类器

113
00:03:52,560 --> 00:03:55,120
学习这所以的数据

114
00:03:55,120 --> 00:03:57,190
我们拥有越多的训练数据

115
00:03:57,190 --> 00:03:58,760
分类器就能更好地工作

116
00:03:59,310 --> 00:04:01,620
现在我们用代码来表示训练数据

117
00:04:01,620 --> 00:04:04,150
我们定义两个变量
特性和标签

118
00:04:04,150 --> 00:04:06,060
特性包含了前两列的数据

119
00:04:06,060 --> 00:04:07,887
标签指最后一列数据

120
00:04:07,887 --> 00:04:09,470
你能把特性作为分类器的输入

121
00:04:09,470 --> 00:04:13,401
标签作为我们希望分类器给出的输出

122
00:04:13,421 --> 00:04:16,937
这里我们要处理一下特性数据
用整数 而不是字符串

123
00:04:16,937 --> 00:04:17,937
即用0表示粗糙

124
00:04:17,937 --> 00:04:19,937
用1来表示光滑

125
00:04:19,937 --> 00:04:20,937
同样地
我们也要处理一下标签数据

126
00:04:20,937 --> 00:04:23,740
用0表示苹果
1表示橘子

127
00:04:23,740 --> 00:04:26,300
这时候我们的程序已用两三行了

128
00:04:26,300 --> 00:04:27,300
接下来的步骤是

129
00:04:27,300 --> 00:04:30,250
用这些示例数据来训练我们的分类器

130
00:04:30,250 --> 00:04:31,250
我们这里用到的分类器类型

131
00:04:31,250 --> 00:04:34,030
叫做决策树

132
00:04:34,030 --> 00:04:35,030
在后面的特征章节中

133
00:04:35,030 --> 00:04:37,109
我们将做深入解释

134
00:04:37,110 --> 00:04:41,270
但现在, 我们把分类器看成是
汇集了很多规则的盒子

135
00:04:41,270 --> 00:04:43,880
因为其实有很多类型的分类器

136
00:04:43,880 --> 00:04:47,170
但是输入输出型总是一样的

137
00:04:47,740 --> 00:04:49,170
我首先引用这个“树”

138
00:04:49,170 --> 00:04:52,000
然后在第四行代码中
创建一个分类器

139
00:04:52,000 --> 00:04:54,460
现在, 它实际上是没有规则的空盒子

140
00:04:54,460 --> 00:04:56,830
完全不知道该如何区别苹果和橘子

141
00:04:56,830 --> 00:04:58,870
为了训练它, 我们需要一种学习算法

142
00:04:58,870 --> 00:05:00,307
如果分类器是集成了一系列规则的盒子

143
00:05:00,307 --> 00:05:01,307
你可以把学习算法想成是

144
00:05:01,307 --> 00:05:04,170
创造这个盒子的过程

145
00:05:04,170 --> 00:05:06,937
它通过训练数据来寻找一些固有的模式

146
00:05:06,937 --> 00:05:09,270
比如, 它会注意到橘子可能会更重一点

147
00:05:09,270 --> 00:05:10,590
那么它会创造一条规则

148
00:05:10,610 --> 00:05:14,270
对于重一些的水果,
有较大可能是个橘子

149
00:05:14,270 --> 00:05:15,659
在scikit这个库里,

150
00:05:15,660 --> 00:05:18,660
训练算法包含在分类器实物中
叫做Fit

151
00:05:19,316 --> 00:05:20,316
你可以把Fit理解成

152
00:05:20,316 --> 00:05:23,135
发现数据固有模式的同义词

153
00:05:23,136 --> 00:05:24,136
在后面的章节

154
00:05:24,136 --> 00:05:27,040
我们会详细讨论它的本质

155
00:05:27,040 --> 00:05:29,100
现在 
我们已经有了一个训练好的分类器了

156
00:05:29,100 --> 00:05:32,860
我们可以用它来测试一下
分辨一些水果

157
00:05:32,860 --> 00:05:36,036
分类器的输入是一些新的实例的特征测量值

158
00:05:36,036 --> 00:05:37,036
假设我们让它区分

159
00:05:37,036 --> 00:05:39,750
一个重约150克
表皮粗糙的水果

160
00:05:39,750 --> 00:05:43,870
如果输出是0 那它将是苹果
如果是1的话就是橘子

161
00:05:43,870 --> 00:05:46,310
在我们按下回车键
看到分类器的预测结果之前

162
00:05:46,310 --> 00:05:47,690
我们先花点时间想一下

163
00:05:47,690 --> 00:05:51,160
如果是你来猜的话
你觉得输出会的是什么

164
00:05:51,160 --> 00:05:53,980
你肯定会跟水果的训练数据比较一下

165
00:05:53,980 --> 00:05:55,630
发现它好像比橘子小一点

166
00:05:55,630 --> 00:05:57,077
因为训练数据中橘子总是又粗糙又重的

167
00:05:57,077 --> 00:05:59,160
这是我的猜测
如果我按下回车键的话

168
00:05:59,160 --> 00:06:01,834
这也是分类器的预测了

169
00:06:01,834 --> 00:06:03,250
如果一切正常的话

170
00:06:03,250 --> 00:06:06,050
这将是你完成的
第一个机器学习的程序

171
00:06:06,050 --> 00:06:08,680
你可以在另外一个程序里
通过改变训练数据

172
00:06:08,680 --> 00:06:10,770
来创造一个新的分类器

173
00:06:10,770 --> 00:06:12,101
这种方法比重写规则

174
00:06:12,101 --> 00:06:15,101
有用得多

175
00:06:15,101 --> 00:06:17,350
那你可能会有疑问

176
00:06:17,350 --> 00:06:18,760
为什么我们用水果特征值作为训练数据

177
00:06:18,760 --> 00:06:21,760
而不是用图片

178
00:06:21,760 --> 00:06:22,760
其实你可以用图片

179
00:06:22,760 --> 00:06:25,120
在后面的章节我们会说到

180
00:06:25,120 --> 00:06:26,120
但是以后你会见到

181
00:06:26,120 --> 00:06:29,002
我们现在用的方法是最普遍的

182
00:06:29,002 --> 00:06:30,002
用这些整齐的数据

183
00:06:30,002 --> 00:06:31,829
编写机器学习并不太难

184
00:06:31,829 --> 00:06:33,157
但在掌握它之前

185
00:06:33,157 --> 00:06:35,320
你还需要理解一些重要的概念

186
00:06:35,320 --> 00:06:37,790
在后面几章里我会逐一为您展示

187
00:06:37,790 --> 00:06:40,198
感谢收看 
下次见

188
00:06:40,198 --> 00:06:43,849
［音乐］

