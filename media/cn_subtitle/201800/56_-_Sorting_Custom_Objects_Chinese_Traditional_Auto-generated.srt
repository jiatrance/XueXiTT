1
00:00:00,000 --> 00:00:03,360
 已经 欢迎回到家里了 
这个视频我将告诉你 如何 

2
00:00:03,360 --> 00:00:08,550
 按任何属性排序自定义对象 
 你想要的，让我们继续说吧 

3
00:00:08,550 --> 00:00:11,940
 你正在 从事 社交活动 
网络， 你有一堆 用户 
报名参加，他们都是第一个 

4
00:00:14,400 --> 00:00:19,020
名字姓氏生日也许是用户 
 ID 

5
00:00:19,020 --> 00:00:23,160
他们还列出了自己喜欢的颜色 
 我不知道像多少钱 了 

6
00:00:23,160 --> 00:00:27,660
在他们的银行账户中 
理由是这些用户有很多方式

7
00:00:27,660 --> 00:00:31,410
 不同的属性 ， 你是 
 我很难搞清楚如何 做到这一点 

8
00:00:31,410 --> 00:00:36,750
 制作一个算法或函数来排序 
 每 一个让我们说你想要 排序 

9
00:00:36,750 --> 00:00:42,030
通过喜欢的颜色或生日，你可以 
这样做所以检查 了这一点正是我们 

10
00:00:42,030 --> 00:00:46,530
要做的就像我们之前一样 
 我将使用运营商模块 

11
00:00:46,530 --> 00:00:53,309
 现在要去导入属性getter 
 现在，属性getter的项目getter 

12
00:00:53,309 --> 00:00:57,649
让我继续 前进，做 一个真正的快速 
 我 觉得你需要两个空格 

13
00:00:57,649 --> 00:01:07,950
 Pepe 好吧所以上课的用户让我 
 只是让dunder init和我们说 ， 

14
00:01:07,950 --> 00:01:13,619
 每当你创建一个新的用户对象 
 我们会说他们需要一个名字 和用户 

15
00:01:13,619 --> 00:01:24,000
 ID所以我们只是说x和y 都可以 
所以自我名称等于x，所以我只是 

16
00:01:24,000 --> 00:01:30,810
将其命名为用户ID等于y，所以每当 
我们初始化对象，我们只会说

17
00:01:30,810 --> 00:01:36,990
巴基十个或任何 所以像 
 所有的权利 看起来不错 现在居然 
 我要做的另一件事我会做 

18
00:01:38,430 --> 00:01:43,229
向你们展示一个很酷的 它并不是真的 
诀窍但当然是 dunder init 
 意味着每当你初始化那里 

19
00:01:45,090 --> 00:01:53,280
另外一个叫ARËPR，所以这是一个 
 这个对象的字符串表示如此 

20
00:01:53,280 --> 00:01:57,780
这意味着让我们说你 就是 
想打印出来让我们说你 

21
00:01:57,780 --> 00:02:01,110
有一个这个用户类的实例
那是巴基

22
00:02:01,110 --> 00:02:07,469
所以信息只是Bucky 和 
 我的用户ID是十，但 后来 

23
00:02:07,469 --> 00:02:12,460
在你的代码中你刚才 说打印出来 
 Bucky然后Python 就好了 

24
00:02:12,460 --> 00:02:17,840
你究竟想要 我 打印出来的是什么？ 
 关于他的姓名或他的用户ID 或 

25
00:02:17,840 --> 00:02:22,550
他的名字和他的用户名或你想要的 
打印出该对象所在的位置 

26
00:02:22,550 --> 00:02:25,970
 记忆 我的意思是我到底是什么 
 应该知道Bucky是什么 

27
00:02:25,970 --> 00:02:30,350
我希望这 就是正确的 
 在这里，我们能做的就是我们能做到的 

28
00:02:30,350 --> 00:02:36,080
 基本上只是回报什么 
 我们想做的代表和我们 

29
00:02:36,080 --> 00:02:41,210
可以做到这一点，但我们想要，所以我会 
 每当我说打出Bucky时就说 

30
00:02:41,210 --> 00:02:45,560
然后它会打印出来 
 对象的名字 ，然后我打印 出来 

31
00:02:45,560 --> 00:02:51,530
他的身份证，我会 像我一样 将 他们分开 
不知道分号或其他什么 

32
00:02:51,530 --> 00:02:58,040
再加上这个用户ID吧 
实际上将是一个int所以我们 

33
00:02:58,040 --> 00:03:04,490
需要确保 将其转换成 一个 
串SOFIE是你的ID和 名称 

34
00:03:04,490 --> 00:03:07,430
 当然已经 是一个字符串所以 这就是原因 
我们不需要再这样做了 

35
00:03:07,430 --> 00:03:12,170
 每当我们说打印出一个实例或 
一个用户对象， 那就是它的本质 
 要给我们这么拯救我们一个 

36
00:03:13,730 --> 00:03:18,890
 格式化的一点点时间 
 所有人以后都可以，所以现在让 

37
00:03:18,890 --> 00:03:25,280
 我继续 前进 ，使一群用户 
 粘贴在这样你们 就不必 

38
00:03:25,280 --> 00:03:31,400
 看我 做 的 这 一切 ，现在我有一个列表 
 用户对象 我有Bucky 

39
00:03:31,400 --> 00:03:36,680
莎莉金枪鱼布莱恩谁的名字是金枪鱼 
这很奇怪但实际上会是这样 

40
00:03:36,680 --> 00:03:40,580
 一个非常酷的名字， 我会给我的 孩子起个名字 
金枪鱼没事，他们都有用户 

41
00:03:40,580 --> 00:03:45,350
 ID 没什么特别的 
但是我们想做的就是我们漂亮
我只是想对所有 这些 进行排序 

42
00:03:47,209 --> 00:03:52,239
 用户让我们看看他们的订单 
 默认排序，以便用户进入 

43
00:03:52,239 --> 00:03:59,239
用户只需继续打印用户即可 
运行它并再次检查 它 

44
00:03:59,239 --> 00:04:05,600
打印它，也许如果我添加一个空格
对，可能会有 一点点 容易 

45
00:04:05,600 --> 00:04:10,610
 再次看到 它打印出来的 
指定的顺序所以默认 看看 

46
00:04:10,610 --> 00:04:16,430
 这里发生了什么打印出Bucky 
莎莉金枪鱼布莱恩重新打印出来 

47
00:04:16,430 --> 00:04:22,070
无论我们初始化对象的顺序如何
但是我们想要你知道make 

48
00:04:22,070 --> 00:04:26,130
按名称对它们进行排序的特殊功能
并且还 

49
00:04:26,130 --> 00:04:30,180
我们的ID就像你一样 
 寻找你 不想要 的朋友 

50
00:04:30,180 --> 00:04:34,410
 随机 浏览 所有这些 
随机不会那么高效 

51
00:04:34,410 --> 00:04:40,440
看一下这个
让我添加那个小分隔符，以便它们 

52
00:04:40,440 --> 00:04:45,360
不要把它们全部混杂在一起 
我们将为用户命名用户 

53
00:04:45,360 --> 00:04:53,700
仍然在排序，你又是什么 
想要在那里对用户进行排序

54
00:04:53,700 --> 00:04:57,180
但我们要做的就是我们 
 不想 在默认情况下对其 进行 排序 

55
00:04:57,180 --> 00:05:02,220
 订购 我们想要做的是我们想要的 
 排序它通过 我们会按名称排序说出来 

56
00:05:02,220 --> 00:05:11,970
首先得到一个属性，并在此 
我们只需输入名称，这就是 

57
00:05:11,970 --> 00:05:20,040
我们如何才能指定如何进行排序 
就像之前 我们打印用户并检查一样 

58
00:05:20,040 --> 00:05:24,360
这样做又是什么呢 
只是不 默认 打印 出来 

59
00:05:24,360 --> 00:05:29,340
 责令 他们的名字 它们排序， 并 
那么这个效率要高得多
再次， 如果你想通过ID做 

60
00:05:32,900 --> 00:05:41,070
然后， 我只是将其 命名为用户ID 
我们只是说这个可迭代的排序

61
00:05:41,070 --> 00:05:46,470
 这个属性 现在我们可以继续 
 并 运行它并检查出来，这是 

62
00:05:46,470 --> 00:05:52,110
默认这个按名称排序，这个 
当然按用户ID 2排序

63
00:05:52,110 --> 00:05:59,660
 五九四十三 六十一和77 
所以这又 是多么令人敬畏

64
00:05:59,660 --> 00:06:04,530
 比你可能做的更容易 
在哦，是的，你进去六点 
几分钟你不仅要学习 

65
00:06:06,540 --> 00:06:11,210
 关于如何对自定义进行排序的表示
对象我的意思是绝对的 
 太棒了所以想想看我会的 

66
00:06:13,920 --> 00:06:17,150
下次闻你